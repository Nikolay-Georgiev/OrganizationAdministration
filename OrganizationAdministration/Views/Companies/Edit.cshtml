@*//@model OrganizationAdministration.Data.Company*@
@model Tuple < OrganizationAdministration.Data.Company, List<OrganizationAdministration.Data.Employee>>
@{
    ViewBag.Title = "Edit";
    var employeesGrid = new WebGrid(Model.Item2,new List<string> {"FirstName","LastName", "ExperiecnCode"},null, 10, true,true,null,null,null,null);
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Company</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => Model.Item1.CompanyID)

        <div class="form-group">
            @Html.LabelFor(model => model.Item1.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Item1.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Item1.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
        @*<div>*@
            @*@employeesGrid.com*@
            @*@employeesGrid.GetHtml(htmlAttributes: new { @id = "WebGrid", @class = "Grid" },
            columns: employeesGrid.Columns(
            employeesGrid.Column("FirstName", "First name"),
            employeesGrid.Column("LastName", "Last name"),
            employeesGrid.Column("ExperiecnCode", "Experience")))*@
            <table class="table">
                <tr>
                    <th>
                        Employees
                    </th>
                </tr>
                <tr>
                    <th>
                        Name
                    </th>
                    <th>
                        Last name
                    </th>
                    <th>
                        Salary
                    </th>
                    <th>
                        Vacation days
                    </th>
                    <th>
                        Experience level
                    </th>
                    <th>
                        Experience code
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model.Item2)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Salary)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.VacationDays)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ExperienceLevel)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ExperiecnCode)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", "Employees", new { id = item.EmployeeID }, null) |
                            @Html.ActionLink("Details", "Details", "Employees", new { id = item.EmployeeID }, null) |
                            @Html.ActionLink("Delete", "Delete", "Employees", new { id = item.EmployeeID }, null)
                        </td>
                    </tr>
                }

            </table>

        </div>

    @*</div>*@
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
